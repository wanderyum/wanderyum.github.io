<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>主页 on Manfredo的主页</title>
    <link>https://wanderyum.github.io/</link>
    <description>Recent content in 主页 on Manfredo的主页</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 19 Feb 2020 14:47:59 +0800</lastBuildDate>
    <atom:link href="https://wanderyum.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Codes</title>
      <link>https://wanderyum.github.io/codes/</link>
      <pubDate>Wed, 19 Feb 2020 21:00:18 +0800</pubDate>
      <guid>https://wanderyum.github.io/codes/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;DNA电路模拟 - DNACircuitSim&lt;/strong&gt;&lt;br&gt;
Github:&lt;a href=&#34;https://github.com/wanderyum/DNACircuitSim&#34;&gt;wanderyum/DNACircuitSim&lt;/a&gt;&lt;br&gt;
&lt;em&gt;作为一份教程介绍了模拟DNA 电路反应所用到的工具库、模型的数学描述以及代码实现。并且以nanoscale文章&amp;quot;Nicking enzyme-controlled toehold regulation for DNA logic circuits&amp;quot;中的数据作为例子进行了具体展示。&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Introduction to Myself</title>
      <link>https://wanderyum.github.io/cv/</link>
      <pubDate>Wed, 19 Feb 2020 11:17:18 +0800</pubDate>
      <guid>https://wanderyum.github.io/cv/</guid>
      <description>&lt;p&gt;王之煜者, 内蒙古呼和浩特人也。学严谨, 性豁达。&lt;/p&gt;
&lt;p&gt;少好读书。时年十, 始知电脑, 遂为其游戏如仙剑沙丘迷。&lt;/p&gt;
&lt;p&gt;及至初高, 仍且学且戏。临高考, 父问曰： 若败, 就学于本地高校, 何如?&lt;/p&gt;
&lt;p&gt;曰: 吾宁就学于新疆毋本地。及放榜, 果考取西北工大。&lt;/p&gt;
&lt;p&gt;入学四年, 无所长。临毕业, 决考研本校。然运不济, 时线大涨, 遂落榜。&lt;/p&gt;
&lt;p&gt;反思良久, 决意来年再战。&lt;/p&gt;
&lt;p&gt;亲戚问其所考, 曰: 本校既不择吾, 吾亦不择本校。遂考华中大。及分数公布, 其分于线齐也。&lt;/p&gt;
&lt;p&gt;时其人亦不抱希望, 勤于集信息, 以备调剂。然造化之神奇, 过复试, 录于自动化学院。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://wanderyum.github.io/files/resume-HR.pdf&#34;&gt;Resume&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Scientific Research</title>
      <link>https://wanderyum.github.io/research/</link>
      <pubDate>Wed, 19 Feb 2020 11:17:18 +0800</pubDate>
      <guid>https://wanderyum.github.io/research/</guid>
      <description>&lt;h2 id=&#34;发表文章&#34;&gt;发表文章&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Nicking-Assisted Reactant Recycle to Implement Entropy-Driven DNA Circuit&lt;/strong&gt;&lt;br&gt;
&lt;em&gt;Cheng Zhang, &lt;strong&gt;Zhiyu Wang&lt;/strong&gt;, Yan Liu, Jing Yang, Xinxin Zhang, Yifan Li, Linqiang Pan, Yonggang Ke, Hao Yan&lt;/em&gt;&lt;br&gt;
&lt;strong&gt;Journal of the American Chemical Society&lt;/strong&gt;, 2019, 141(43): 17189-17197. doi:&lt;a href=&#34;https://doi.org/10.1021/jacs.9b07521&#34;&gt;10.1021/jacs.9b07521&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Aptamer-based Regulation on Transcription Circuits&lt;/strong&gt;&lt;br&gt;
&lt;em&gt;Linqiang Pan, Yingxin Hu, Taoli Ding, Chun Xie, &lt;strong&gt;Zhiyu Wang&lt;/strong&gt;, Zhekun Chen, Jing Yang, Cheng Zhang&lt;/em&gt;&lt;br&gt;
&lt;strong&gt;Chemical Communications&lt;/strong&gt;, 2019, 55, 7378-7381. doi:&lt;a href=&#34;https://doi.org/10.1039/c9cc03141c&#34;&gt;10.1039/c9cc03141c&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Entropy-driven DNA logic circuits regulated by DNAzyme&lt;/strong&gt;&lt;br&gt;
&lt;em&gt;Jing Yang, Ranfeng Wu, Yifan Li, &lt;strong&gt;Zhiyu Wang&lt;/strong&gt;, Linqiang Pan, Qiang Zhang, Zuhong Lu, Cheng Zhang&lt;/em&gt;&lt;br&gt;
&lt;strong&gt;Nucleic Acids Research&lt;/strong&gt;, 2018, 46(16): 8532-8541. doi:&lt;a href=&#34;https://doi.org/10.1093/nar/gky663&#34;&gt;10.1093/nar/gky663&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Nicking enzyme-controlled toehold regulation for DNA logic circuits&lt;/strong&gt;&lt;br&gt;
&lt;em&gt;Linqiang Pan, &lt;strong&gt;Zhiyu Wang&lt;/strong&gt;, Yifan Li, Fei Xu, Qiang Zhang and Cheng Zhang&lt;/em&gt;&lt;br&gt;
&lt;strong&gt;Nanoscale&lt;/strong&gt;, 2017, 9(46): 18223-18228. doi:&lt;a href=&#34;https://doi.org/10.1039%2Fc7nr06484e&#34;&gt;10.1039%2Fc7nr06484e&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;A Novel Bio-Sensor Based on DNA Strand Displacement&lt;/strong&gt;&lt;br&gt;
&lt;em&gt;Xiaolong Shi, &lt;strong&gt;Zhiyu Wang&lt;/strong&gt;, Chenyan Deng, Tao Song, Linqiang Pan, Zhihua Chen&lt;/em&gt;&lt;br&gt;
&lt;strong&gt;PLoS One&lt;/strong&gt;, 2014, 9(10): e108856. doi:&lt;a href=&#34;https://doi.org/10.1371/journal.pone.0108856&#34;&gt;10.1371/journal.pone.0108856&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Programmable DNA tile self-assembly using a hierarchical sub-tile strategy&lt;/strong&gt;&lt;br&gt;
&lt;em&gt;Xiaolong Shi, Wei Lu, &lt;strong&gt;Zhiyu Wang&lt;/strong&gt;, Linqiang Pan, Guangzhao Cui, Jin Xu and Thomas H LaBean&lt;/em&gt;&lt;br&gt;
&lt;strong&gt;Nanotechnology&lt;/strong&gt;, 2014, 25(7): 075602. doi:&lt;a href=&#34;http://dx.doi.org/10.1088/0957-4484/25/7/075602&#34;&gt;10.1088/0957-4484/25/7/075602&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;参与项目&#34;&gt;参与项目&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;国家自然科学基金重点项目&lt;/strong&gt;&lt;br&gt;
基于细胞(膜和核酸)的计算模型和算法研究(项目批准号61033003)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;国家自然科学基金面上项目&lt;/strong&gt;&lt;br&gt;
基于DNA自组装纳米芯片的分子计算模型研究(项目批准号61772214)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;国家自然科学基金重点项目&lt;/strong&gt;&lt;br&gt;
基于细胞的膜计算系统以及在生物学中的应用(项目批准号61320106005)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>记某网易校招笔试题</title>
      <link>https://wanderyum.github.io/blogs/%E8%AE%B0%E6%9F%90%E7%BD%91%E6%98%93%E6%A0%A1%E6%8B%9B%E7%AC%94%E8%AF%95%E9%A2%98/</link>
      <pubDate>Fri, 28 Sep 2018 16:34:35 +0800</pubDate>
      <guid>https://wanderyum.github.io/blogs/%E8%AE%B0%E6%9F%90%E7%BD%91%E6%98%93%E6%A0%A1%E6%8B%9B%E7%AC%94%E8%AF%95%E9%A2%98/</guid>
      <description>&lt;p&gt;2018年9月28日网易校招笔试编程题第一道。&lt;/p&gt;
&lt;h3 id=&#34;题目描述&#34;&gt;题目描述&lt;/h3&gt;
&lt;p&gt;牛牛和妞妞去海边捡了一大袋美丽的贝壳, 千辛万苦地运回家后, 牛牛和妞妞打算分掉这些贝壳。&lt;/p&gt;
&lt;p&gt;牛牛提出, 他和妞妞轮流从还没有分配的贝壳中取一定数量的贝壳, 直到贝壳分完为止。分配规则是牛牛每次取剩余贝壳的1/10(向下取整), 妞妞先取。&lt;/p&gt;
&lt;p&gt;妞妞想要得到不少于一半的贝壳, 又不想太过分, 那么她一次最少取多少个贝壳才能得到不少于一半的贝壳呢?&lt;/p&gt;
&lt;h4 id=&#34;输入描述&#34;&gt;输入描述:&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;一个正整数n, 表示贝壳的总数量, 1&amp;lt;=n&amp;lt;=1e18
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;输出描述:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;一个正整数m, 表示妞妞一次最少取的贝壳数量。
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;示例&#34;&gt;示例&lt;/h4&gt;
&lt;p&gt;输入&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;70
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;输出&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;3
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;思路分析&#34;&gt;思路分析&lt;/h3&gt;
&lt;p&gt;典型的二分法问题。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>使用MathJax在HTML中显示LaTeX公式</title>
      <link>https://wanderyum.github.io/blogs/misc/%E5%9C%A8html%E4%B8%AD%E6%98%BE%E7%A4%BAlatex%E5%85%AC%E5%BC%8F/</link>
      <pubDate>Wed, 12 Sep 2018 11:17:18 +0800</pubDate>
      <guid>https://wanderyum.github.io/blogs/misc/%E5%9C%A8html%E4%B8%AD%E6%98%BE%E7%A4%BAlatex%E5%85%AC%E5%BC%8F/</guid>
      <description>&lt;p&gt;LaTeX($\LaTeX$)是一种基于ΤeΧ的排版系统, 利用这种格式，即使使用者没有排版和程序设计的知识也可以充分发挥由TeX所提供的强大功能生成很多具有书籍质量的印刷品。对于生成复杂表格和数学公式，这一点表现得尤为突出。因此它非常适用于生成高印刷质量的科技和数学类文档。而HTML原生不支持LaTex格式的数学符号, 这就需要Mathjax这个JavaScript显示引擎了。&lt;/p&gt;
&lt;h3 id=&#34;步骤&#34;&gt;步骤&lt;/h3&gt;
&lt;p&gt;在head部分引入MathJax.js：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;text/javascript&amp;#34;&lt;/span&gt; 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML&amp;#34;&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;添加行内显示公式:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;text/x-mathjax-config&amp;#34;&lt;/span&gt;&amp;gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;MathJax&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Hub&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Config&lt;/span&gt;({
    &lt;span style=&#34;color:#a6e22e&#34;&gt;tex2jax&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {&lt;span style=&#34;color:#a6e22e&#34;&gt;inlineMath&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; [[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;$&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;$&amp;#39;&lt;/span&gt;]]},
    &lt;span style=&#34;color:#a6e22e&#34;&gt;messageStyle&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;none&amp;#34;&lt;/span&gt;});
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;示例代码&#34;&gt;示例代码&lt;/h3&gt;
&lt;p&gt;latex.html:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;charset&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;utf-8&amp;#34;&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;text/javascript&amp;#34;&lt;/span&gt; 
      &lt;span style=&#34;color:#a6e22e&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML&amp;#34;&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;text/x-mathjax-config&amp;#34;&lt;/span&gt;&amp;gt;
      &lt;span style=&#34;color:#a6e22e&#34;&gt;MathJax&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Hub&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Config&lt;/span&gt;({
        &lt;span style=&#34;color:#a6e22e&#34;&gt;tex2jax&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {&lt;span style=&#34;color:#a6e22e&#34;&gt;inlineMath&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; [[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;$&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;$&amp;#39;&lt;/span&gt;]]},
        &lt;span style=&#34;color:#a6e22e&#34;&gt;messageStyle&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;none&amp;#34;&lt;/span&gt;});
    &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;这是一个行内公式: $e=mc^2$&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;
&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;这是一行公式: $$tan(\alpha) = \frac{sin(\alpha)}{cos(\alpha)}$$&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;参考链接&#34;&gt;参考链接:&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/u013291057/article/details/52861215&#34;&gt;MathJax在页面中正常显示公式&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/LiJiancheng0614/article/details/47069817&#34;&gt;使用MathJax在HTML中显示LaTeX&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>2019阿里校招编程测试, 光明小学接力赛路径问题(2)</title>
      <link>https://wanderyum.github.io/blogs/2019%E9%98%BF%E9%87%8C%E6%A0%A1%E6%8B%9B%E7%BC%96%E7%A8%8B%E6%B5%8B%E8%AF%95-%E5%85%89%E6%98%8E%E5%B0%8F%E5%AD%A6%E6%8E%A5%E5%8A%9B%E8%B5%9B%E8%B7%AF%E5%BE%84%E9%97%AE%E9%A2%982/</link>
      <pubDate>Mon, 10 Sep 2018 16:42:22 +0800</pubDate>
      <guid>https://wanderyum.github.io/blogs/2019%E9%98%BF%E9%87%8C%E6%A0%A1%E6%8B%9B%E7%BC%96%E7%A8%8B%E6%B5%8B%E8%AF%95-%E5%85%89%E6%98%8E%E5%B0%8F%E5%AD%A6%E6%8E%A5%E5%8A%9B%E8%B5%9B%E8%B7%AF%E5%BE%84%E9%97%AE%E9%A2%982/</guid>
      <description>&lt;h3 id=&#34;题目&#34;&gt;题目&lt;/h3&gt;
&lt;p&gt;光明小学的小朋友们要举行一年一度的接力跑大赛了，但是小朋友们却遇到了一个难题：设计接力跑大赛的线路，你能帮助他们完成这项工作么？&lt;/p&gt;
&lt;p&gt;光明小学可以抽象成一张有N个节点的图，每两点间都有一条道路相连。光明小学的每个班都有M个学生，所以你要为他们设计出一条恰好经过M条边的路径。&lt;/p&gt;
&lt;p&gt;光明小学的小朋友们希望全盘考虑所有的因素，所以你需要把任意两点间经过M条边的最短路径的距离输出出来以供参考。&lt;/p&gt;
&lt;p&gt;你需要设计这样一个函数：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;res[][] Solve( N, M, map[][]);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;注意：map必然是N * N的二维数组，且map[i][j] == map[j][i]，map[i][i] == 0，-1e8 &amp;lt;= map[i][j] &amp;lt;= 1e8。（道路全部是无向边，无自环）2 &amp;lt;= N &amp;lt;= 100, 2 &amp;lt;= M &amp;lt;= 1e6。要求时间复杂度控制在O(N^3*log(M))。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;map数组表示了一张稠密图，其中任意两个不同节点i,j间都有一条边，边的长度为map[i][j]。N表示其中的节点数。&lt;/p&gt;
&lt;p&gt;你要返回的数组也必然是一个N * N的二维数组，表示从i出发走到j，经过M条边的最短路径。
你的路径中应考虑包含重复边的情况。&lt;/p&gt;
&lt;p&gt;样例:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;N &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;;
M &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;;
map &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
{&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;},
{&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;},
{&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;}};
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;输出结果:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;result &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
{&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;},
{&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;},
{&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;}};
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;样例解释:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1-&amp;gt;1有两种方法: 1-&amp;gt;2-&amp;gt;1(长度为2+2=4), 1-&amp;gt;3-&amp;gt;1（长度为3+3=6）
2-&amp;gt;2有两种方法: 2-&amp;gt;1-&amp;gt;2(长度为2+2=4), 2-&amp;gt;3-&amp;gt;2（长度为1+1=2）
1-&amp;gt;1有两种方法: 3-&amp;gt;1-&amp;gt;3(长度为3+3=6), 3-&amp;gt;2-&amp;gt;3（长度为1+1=2）
1-&amp;gt;2只有一种方法: 1-&amp;gt;3-&amp;gt;2(长度为3+1=4)
1-&amp;gt;3只有一种方法: 1-&amp;gt;2-&amp;gt;3(长度为2+1=4)
2-&amp;gt;3只有一种方法: 2-&amp;gt;1-&amp;gt;3(长度为2+3=5)
根据对称性可以得到其它部分的答案。
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;思路&#34;&gt;思路&lt;/h3&gt;
&lt;h4 id=&#34;规范化map&#34;&gt;规范化map&lt;/h4&gt;
&lt;p&gt;规范化map主要的好处就是可以将上次得到的约束普遍化。在原始的map里面对起点和终点相同的情况加以惩罚因子, 具体操作就是将起点终点相同的距离设为无穷大, 而不是原来的0。&lt;/p&gt;
&lt;h4 id=&#34;构建函数&#34;&gt;构建函数&lt;/h4&gt;
&lt;p&gt;程序中需要两个函数:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;graphForM&lt;/span&gt;(D, N):
    &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;combineGraph&lt;/span&gt;(g1, g2):
    &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;其中graphForM的作用是获得M个人时的结果, combineGraph在已知n1个人的结果(g1)和n2个人的结果(g2)来得到n1+n2个人的结果的。&lt;/p&gt;
&lt;h4 id=&#34;时间复杂度&#34;&gt;时间复杂度&lt;/h4&gt;
&lt;p&gt;外层log(M)次循环, 内层嵌套两层N次的循环外加一个长度为n的遍历, 故时间复杂度为O(log(M)*N^3), 符合题目要求。&lt;/p&gt;
&lt;h3 id=&#34;程序&#34;&gt;程序&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;combineGraph&lt;/span&gt;(g1, g2):
    h &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; len(g1)
    res &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(h):
        res&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([])
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; j &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(h):
            res[i]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(min([g1[i][k]&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;g2[k][j] &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; k &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(h)]))
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; res

&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;graphForM&lt;/span&gt;(D, N): 
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; N &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; D:
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; D[N]
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; N &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:
        tmpg &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; combineGraph(graphForM(D, N&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;), graphForM(D, N&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;))
        D[N] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; combineGraph(tmpg, D[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;])
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; D[N]
    &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; combineGraph(graphForM(D, N&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;), graphForM(D, N&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;))

inf &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10000&lt;/span&gt;
N &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;
M &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
_map &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [
[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;],
[&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;],
[&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]]

g &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; item &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; _map:
    tmp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; item:
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; i:
            tmp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(i)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
            tmp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(inf)
    g&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(tmp)

D &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {}
D[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; g 
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; graphForM(D, M)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>2019阿里校招编程测试, 光明小学接力赛路径问题(1)</title>
      <link>https://wanderyum.github.io/blogs/2019%E9%98%BF%E9%87%8C%E6%A0%A1%E6%8B%9B%E7%BC%96%E7%A8%8B%E6%B5%8B%E8%AF%95-%E5%85%89%E6%98%8E%E5%B0%8F%E5%AD%A6%E6%8E%A5%E5%8A%9B%E8%B5%9B%E8%B7%AF%E5%BE%84%E9%97%AE%E9%A2%981/</link>
      <pubDate>Mon, 20 Aug 2018 16:42:22 +0800</pubDate>
      <guid>https://wanderyum.github.io/blogs/2019%E9%98%BF%E9%87%8C%E6%A0%A1%E6%8B%9B%E7%BC%96%E7%A8%8B%E6%B5%8B%E8%AF%95-%E5%85%89%E6%98%8E%E5%B0%8F%E5%AD%A6%E6%8E%A5%E5%8A%9B%E8%B5%9B%E8%B7%AF%E5%BE%84%E9%97%AE%E9%A2%981/</guid>
      <description>&lt;h3 id=&#34;题目&#34;&gt;题目&lt;/h3&gt;
&lt;p&gt;光明小学的小朋友们要举行一年一度的接力跑大赛了，但是小朋友们却遇到了一个难题：设计接力跑大赛的线路，你能帮助他们完成这项工作么？&lt;/p&gt;
&lt;p&gt;光明小学可以抽象成一张有N个节点的图，每两点间都有一条道路相连。光明小学的每个班都有M个学生，所以你要为他们设计出一条恰好经过M条边的路径。&lt;/p&gt;
&lt;p&gt;光明小学的小朋友们希望全盘考虑所有的因素，所以你需要把任意两点间经过M条边的最短路径的距离输出出来以供参考。&lt;/p&gt;
&lt;p&gt;你需要设计这样一个函数：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;res[][] Solve( N, M, map[][]);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;注意：map必然是N * N的二维数组，且map[i][j] == map[j][i]，map[i][i] == 0，-1e8 &amp;lt;= map[i][j] &amp;lt;= 1e8。（道路全部是无向边，无自环）2 &amp;lt;= N &amp;lt;= 100, 2 &amp;lt;= M &amp;lt;= 1e6。要求时间复杂度控制在O(N^3*log(M))。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;map数组表示了一张稠密图，其中任意两个不同节点i,j间都有一条边，边的长度为map[i][j]。N表示其中的节点数。&lt;/p&gt;
&lt;p&gt;你要返回的数组也必然是一个N * N的二维数组，表示从i出发走到j，经过M条边的最短路径。
你的路径中应考虑包含重复边的情况。&lt;/p&gt;
&lt;p&gt;样例:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;N &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;;
M &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;;
map &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
{&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;},
{&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;},
{&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;}};
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;输出结果:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;result &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
{&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;},
{&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;},
{&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;}};
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;样例解释:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1-&amp;gt;1有两种方法: 1-&amp;gt;2-&amp;gt;1(长度为2+2=4), 1-&amp;gt;3-&amp;gt;1（长度为3+3=6）
2-&amp;gt;2有两种方法: 2-&amp;gt;1-&amp;gt;2(长度为2+2=4), 2-&amp;gt;3-&amp;gt;2（长度为1+1=2）
1-&amp;gt;1有两种方法: 3-&amp;gt;1-&amp;gt;3(长度为3+3=6), 3-&amp;gt;2-&amp;gt;3（长度为1+1=2）
1-&amp;gt;2只有一种方法: 1-&amp;gt;3-&amp;gt;2(长度为3+1=4)
1-&amp;gt;3只有一种方法: 1-&amp;gt;2-&amp;gt;3(长度为2+1=4)
2-&amp;gt;3只有一种方法: 2-&amp;gt;1-&amp;gt;3(长度为2+3=5)
根据对称性可以得到其它部分的答案。
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;思路&#34;&gt;思路&lt;/h3&gt;
&lt;h4 id=&#34;先考虑m1的情况&#34;&gt;先考虑M=1的情况:&lt;/h4&gt;
&lt;p&gt;设起点为i, 终点为j&lt;/p&gt;
&lt;p&gt;约束: 起点和终点不能相同&lt;/p&gt;
&lt;p&gt;则距离distance(i,j)为&lt;code&gt;map[i][j]&lt;/code&gt;(i!=j)。&lt;/p&gt;
&lt;h4 id=&#34;考虑m增加到2&#34;&gt;考虑M增加到2:&lt;/h4&gt;
&lt;p&gt;设起点为i, 终点为j, 中间经过点为k&lt;/p&gt;
&lt;p&gt;约束: 起点和中间点, 中间点和终点不能相同&lt;/p&gt;
&lt;p&gt;则对于一个确定的中间点k, 距离distance(i,j,k)为&lt;code&gt;map[i][k]+map[k][j]&lt;/code&gt;(i!=k且k!=j)&lt;/p&gt;
&lt;p&gt;根据题目要求, 两点间距离为所有k中距离最短的路程: distance(i,j) = min(distance(i,j,k)) for every k&lt;/p&gt;
&lt;h4 id=&#34;考虑m增加到m&#34;&gt;考虑M增加到m:&lt;/h4&gt;
&lt;p&gt;设起点为i, 终点为j, 终点前一个点为k, i到k走了m-1步形成的距离矩阵为D&lt;/p&gt;
&lt;p&gt;约束: 终点和终点前一个点不能相同&lt;/p&gt;
&lt;p&gt;则对于一个确定的终点前一个点k, 距离distance(i,j,k)为&lt;code&gt;D[i,k]+map[k,j]&lt;/code&gt;(k!=j)&lt;/p&gt;
&lt;p&gt;根据题目要求, 起点到终点距离为所有k中距离最短的路程: distance(i,j) = min(distance(i,j,k)) for every k&lt;/p&gt;
&lt;h4 id=&#34;时间复杂度&#34;&gt;时间复杂度&lt;/h4&gt;
&lt;p&gt;外层M次循环, 内层嵌套两层N次的循环外加一个长度为N的遍历, 故时间复杂度为O(M*N^3), 未能达到要求。&lt;/p&gt;
&lt;p&gt;思路应该是以增加空间使用量为代价来减少外层循环次数。改进后的程序见下篇。&lt;/p&gt;
&lt;h3 id=&#34;程序&#34;&gt;程序&lt;/h3&gt;
&lt;p&gt;给出的语言中Python版本只有2.7:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; copy

N &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;
M &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
g &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [
[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;],
[&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;],
[&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]]

res &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; copy&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;deepcopy(g)
tmp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; copy&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;deepcopy(g)

&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; l &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(M&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;):
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(N):
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; j &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(N):
            res[i][j] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; min([tmp[i][k] &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; g[k][j] &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; k &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(N) &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (l &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; k&lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt;i) &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; k&lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt;j])
    tmp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; copy&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;deepcopy(res)

&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; res
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;注意&#34;&gt;注意&lt;/h3&gt;
&lt;h4 id=&#34;copydeepcopy&#34;&gt;copy.deepcopy&lt;/h4&gt;
&lt;p&gt;python中当列表为嵌套列表时, 直接赋值或切片赋值都会导致两个变量指向一个对象:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;L1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;],[&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;]]
L2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; L1
L3 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; L1[:]
L1[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;][&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;250&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(L2,L3)
&lt;span style=&#34;color:#75715e&#34;&gt;# -&amp;gt; ([[250, 2, 3], [4, 5, 6]], [[250, 2, 3], [4, 5, 6]])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;m2和m3约束不同&#34;&gt;M=2和M=3约束不同&lt;/h4&gt;
&lt;p&gt;M=2时第一步中起点和终点不能相同, 而M=3时前两步过程中起点和终点可以相同。&lt;/p&gt;
&lt;h3 id=&#34;思考&#34;&gt;思考&lt;/h3&gt;
&lt;p&gt;题目中map矩阵中对角线为0, 表示自己与自己距离为0, 在题目实现时其实可以将对角线的0改成无穷大来对起点终点相同进行惩罚从而简化约束条件。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>msys2配置</title>
      <link>https://wanderyum.github.io/blogs/misc/msys2%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Sat, 14 Jul 2018 16:42:22 +0800</pubDate>
      <guid>https://wanderyum.github.io/blogs/misc/msys2%E9%85%8D%E7%BD%AE/</guid>
      <description>&lt;p&gt;这里假设你已经成功安装&lt;a href=&#34;https://www.msys2.org/&#34;&gt;msys2&lt;/a&gt;, 并且安装目录为&lt;code&gt;$directory&lt;/code&gt;, 比如说长这个样子: &lt;code&gt;C:\ProgramFiles\msys64&lt;/code&gt;。&lt;/p&gt;
&lt;h3 id=&#34;改变软件源&#34;&gt;改变软件源&lt;/h3&gt;
&lt;p&gt;安装好msys后的第一件事是改变软件源, 否则直接连官方服务器速度感人。这里推荐中国科学技术大学的软件源(ustc)。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用记事本打开&lt;code&gt;$directory\etc\pacman.d\mirrorlist.msys&lt;/code&gt;, 把ustc源加到第一行:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;## Primary
## msys2.org
Server = http://mirrors.ustc.edu.cn/msys2/msys/$arch/
Server = http://repo.msys2.org/msys/$arch
Server = https://downloads.sourceforge.net/project/msys2/REPOS/MSYS2/$arch
Server = http://www2.futureware.at/~nickoe/msys2-mirror/msys/$arch/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;用记事本打开&lt;code&gt;$directory\etc\pacman.d\mirrorlist.mingw32&lt;/code&gt;, 把ustc源加到第一行:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;## Primary
## msys2.org
Server = http://mirrors.ustc.edu.cn/msys2/mingw/i686/
Server = http://repo.msys2.org/mingw/i686
Server = https://downloads.sourceforge.net/project/msys2/REPOS/MINGW/i686
Server = http://www2.futureware.at/~nickoe/msys2-mirror/mingw/i686
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;用记事本打开&lt;code&gt;$directory\etc\pacman.d\mirrorlist.mingw64&lt;/code&gt;, 把ustc源加到第一行:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;## Primary
## msys2.org
Server = http://mirrors.ustc.edu.cn/msys2/mingw/x86_64
Server = http://repo.msys2.org/mingw/x86_64
Server = https://downloads.sourceforge.net/project/msys2/REPOS/MINGW/x86_64
Server = http://www2.futureware.at/~nickoe/msys2-mirror/mingw/x86_64
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;用pacman更新系统以及安装软件&#34;&gt;用pacman更新系统以及安装软件&lt;/h3&gt;
&lt;p&gt;msys2用pacman管理软件, 和archlinux是一样的。pacman常用命令:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;pacman -Syu       &lt;span style=&#34;color:#75715e&#34;&gt;# 同步软件库并更新系统到最新状态&lt;/span&gt; 
pacman -Ss vim    &lt;span style=&#34;color:#75715e&#34;&gt;# 搜索软件仓库里名字含有vim的软件包&lt;/span&gt;
pacman -S git     &lt;span style=&#34;color:#75715e&#34;&gt;# 安装git&lt;/span&gt;
pacman -R git     &lt;span style=&#34;color:#75715e&#34;&gt;# 删除git&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;添加右键命令msys-here&#34;&gt;添加右键命令&amp;quot;msys here&amp;rdquo;&lt;/h3&gt;
&lt;p&gt;以windows 10为例。&lt;/p&gt;
&lt;p&gt;1 找到msys2的安装目录&lt;code&gt;$directory&lt;/code&gt;, 新建&lt;code&gt;msys2.bat&lt;/code&gt;, 内容如下(将&lt;code&gt;$directory&lt;/code&gt;换成自己的路径):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;$directory\msys2_shell.cmd -mingw64 -where %cd%
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;2 &lt;code&gt;Win + r&lt;/code&gt;启动regedit, 进入&lt;code&gt;HKEY_CLASSES_ROOT\Directory\Background\shell&lt;/code&gt;, 新建&lt;strong&gt;项&lt;/strong&gt;, 命名为&lt;code&gt;msys2&lt;/code&gt;(和cmd、Powershell同一等级)。&lt;/p&gt;
&lt;p&gt;3 右键msys2, 再新建&lt;strong&gt;项&lt;/strong&gt;, 命名为&lt;code&gt;command&lt;/code&gt;。选中新建的&lt;code&gt;command&lt;/code&gt;, 更改右边窗口的值为&lt;code&gt;$directory\msys2.bat&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;4 右键msys2, 新建&lt;strong&gt;字符串&lt;/strong&gt;, 名称为icon, 值为&lt;code&gt;$directory\msys2.ico&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;在这个过程中, &lt;code&gt;msys2&lt;/code&gt;项使系统识别了在右键菜单中要添加名为&lt;code&gt;msys2&lt;/code&gt;的选项, &lt;code&gt;command&lt;/code&gt;项添加指出关联的程序位置, &lt;code&gt;icon&lt;/code&gt;字符串指向要用的图标地址。&lt;/p&gt;
&lt;p&gt;参考文章:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/liyuanbhu/article/details/56496501&#34;&gt;给 MSYS2 添加中科大的源&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.2cto.com/kf/201704/620094.html&#34;&gt;pacman常用命令&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/u011924787/article/details/69485944&#34;&gt;为msys2添加右键，在当前目录打开&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Vultr VPS &#43; FreeFileSync搭建远程同步系统</title>
      <link>https://wanderyum.github.io/blogs/misc/vultrvpsfreefilesync%E6%90%AD%E5%BB%BA%E8%BF%9C%E7%A8%8B%E5%90%8C%E6%AD%A5%E7%B3%BB%E7%BB%9F/</link>
      <pubDate>Wed, 11 Jul 2018 16:42:22 +0800</pubDate>
      <guid>https://wanderyum.github.io/blogs/misc/vultrvpsfreefilesync%E6%90%AD%E5%BB%BA%E8%BF%9C%E7%A8%8B%E5%90%8C%E6%AD%A5%E7%B3%BB%E7%BB%9F/</guid>
      <description>&lt;p&gt;本文主要介绍通过Vultr VPS作为服务器配合软件FreeFileSync的sftp功能搭建远程同步系统。其基本原理为通过sshfs将服务器上的文件夹映射到本地文件夹，在用FreeFileSync进行文件夹内容的比较与同步。
这里假设你已经购买Vultr虚拟服务器并成功部署，如果需要详细购买流程可以参考&lt;a href=&#34;https://blog.csdn.net/sinat_32829963/article/details/79261297&#34;&gt;这篇文章&lt;/a&gt;。本文搭建VPS用的系统是Ubuntu 16.04 x64， 下面从ssh登录VPS开始，以LinuxMint 18.3为例。&lt;/p&gt;
&lt;h3 id=&#34;通过ssh登录vps&#34;&gt;通过ssh登录VPS&lt;/h3&gt;
&lt;p&gt;假设VPS的IP为2.2.2.2，密码为rootpw。终端输入：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;ssh root@2.2.2.2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;接下来输入密码rootpw。于是进入了VPS：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;root@vultr:~#
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;此时默认所在位置位于/root。&lt;/p&gt;
&lt;h5 id=&#34;创建新的管理员账户&#34;&gt;创建新的管理员账户&lt;/h5&gt;
&lt;p&gt;默认账户是root账户，权限比较大，命令输错危害比较大。出于安全性考虑同时避免输入默认的乱码作为密码，建立一个新的管理员帐号十分有必要。
如果locale命令报错&lt;code&gt;Cannot set LC_ALL to default locale: No such file or directory&lt;/code&gt;，输入命令&lt;code&gt;export LC_ALL=en_US.UTF-8&lt;/code&gt;。
假设新帐号名字为newusr，密码为newpw， 输入命令&lt;code&gt;adduser newusr&lt;/code&gt;，并根据提示完善帐号信息：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;root@vultr:~# adduser newusr
Adding user `newusr&amp;#39; ...
Adding new group `newusr&amp;#39; (1001) ...
Adding new user `newusr&amp;#39; (1001) with group `newusr&amp;#39; ...
Creating home directory `/home/newusr&amp;#39; ...
Copying files from `/etc/skel&amp;#39; ...
New password: 
Retype new password: 
passwd: password updated successfully
Changing the user information for newusr
Enter the new value, or press ENTER for the default
	Full Name []: 
	Room Number []: 
	Work Phone []: 
	Home Phone []: 
	Other []: 
Is the information correct? [Y/n] y
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;此时建立的帐号是普通帐号，没有执行sudo的权限，需要通过以下步骤添加管理员权限：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;root@vultr:~# visudo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;将里面&lt;code&gt;# User privilege specification&lt;/code&gt;下添加&lt;code&gt;newusr  ALL=(ALL:ALL) ALL&lt;/code&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# User privilege specification&lt;/span&gt;
root    ALL&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(ALL:ALL) ALL
newusr  ALL&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(ALL:ALL) ALL
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后Ctrl+O保存(还需要按一次Enter确定), Ctrl+X退出。
输入&lt;code&gt;exit&lt;/code&gt;退出VPS登录。&lt;/p&gt;
&lt;h5 id=&#34;登录vps建立远程同步文件夹&#34;&gt;登录VPS建立远程同步文件夹&lt;/h5&gt;
&lt;p&gt;假设要建立的目录为/home/newusr/Sync/:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;ssh newusr@2.2.2.2
newusr@2.2.2.2&amp;#39;s password: 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;mkdir Sync
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h5 id=&#34;安装并设置sshfs&#34;&gt;安装并设置sshfs&lt;/h5&gt;
&lt;p&gt;假设本地待映射文件夹路径为$localdir，其大概长得类似这样: /home/XXX/Document/folder，最好不需要管理员权限就可以对其进行操作。
安装sshfs:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo aptitude install sshfs
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;下面要把远程VPS上的文件夹映射到本地文件夹(注意冒号后不要有空格):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sshfs ssh newusr@2.2.2.2:/home/newusr/Sync/ $localdir
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;之后就可以用FreeFileSync通过同步本地两个文件夹来实现本地文件夹与VPS文件夹的同步了。&lt;/p&gt;
&lt;p&gt;最后是终止映射:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;fusermount -u $localdir
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h5 id=&#34;参考链接&#34;&gt;参考链接:&lt;/h5&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/sinat_32829963/article/details/79261297&#34;&gt;Vultr VPS搭建SS(ShadowSocks)教程&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/timothy93bp/article/details/77679000&#34;&gt;Ubuntu16.04系统中创建新用户&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://freefilesync.org/manual.php?topic=ftp-setup&#34;&gt;FreeFileSync User Manual&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.linuxprobe.com/sshfs-linux-fires.html&#34;&gt;使用 SSHFS 挂载远程的 Linux 文件系统及目录&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
